pops[[subsp]]=gsub("_", ".", pops[[subsp]])
pops[[subsp]]=pops[[subsp]][order(pops[[subsp]])]
# Covariance matrices
for(seed in c('', '_seed.100', '_seed.10k')){
if(seed==''){seed_name='focal'}
if(seed=='_seed.100'){seed_name='100'}
if(seed=='_seed.10k'){seed_name='10k'}
omega[['exome']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.0_minMAC2",seed,"_mat_omega.out")))
colnames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
omega[['chr21']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.0_minMAC2.non-genic_1000bp.flanks",seed,"_mat_omega.out")))
colnames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
}
# XtX output
## Annotated file
ann[['exome']][[subsp]]=unique(fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5",
subsp.file, ".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.out_row.per.gtf.annot_5000bp.flanks"),
header = T, select=c("chr", "pos", "gene", "MRK")))
ann[['exome']][[subsp]][ann[['exome']][[subsp]]$gene=='.','gene']=NA
## Exome with FPR data
xtx[['exome']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/baypass_core_output_with_fprs/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.fpr.non-genic_1000bp.flanks"))
xtx[['exome']][[subsp]]=merge(xtx[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
## Chr21
xtx[['chr21']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks_summary_pi_xtx_formatted"))
## Pi prior parameters
seed_suffixs=c("", "_seed.100", "_seed.10k")
for(run in 1:3){
pi_para[['exome']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2", seed_suffixs[run], "_summary_beta_params.out"))
pi_para[['chr21']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks", seed_suffixs[run], "_summary_beta_params.out"))
}
## Allele frequencies
allele.freq[[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5", subsp.file,
".pops_missing.pops.", miss.pop,"_minMAC2_summary_pij.out_pop.info"))
#### Population colours (according to subspecies)
subsp.col[[subsp]]=c()
for(pop in pops[[subsp]]){
if(startsWith(pop, "c.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "green3")}
if(startsWith(pop, "e.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "darkorange")}
if(startsWith(pop, "n.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "red")}
if(startsWith(pop, "w.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "blue")}
}
# AUX output
if(subsp!='n'){
## Exome with FPR data
betai[['exome']][[subsp]]=unique(fread(paste0("baypass_aux/output/baypass_aux_output_with_fprs/f5", subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_",
env_data, "_summary_betai.out_all_runs.fpr.non-genic_1000bp.flanks")))
betai[['exome']][[subsp]]=merge(betai[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
betai[['exome']][[subsp]]$log_fpr=-log(betai[['exome']][[subsp]]$fpr)
## chr21
betai[['chr21']][[subsp]]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/chr21.f7",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2.non-genic_1000bp.flanks",omega_run,"_", env_data, "_summary_betai.out_all_runs.gz"))
## Cov file
cov.in[[subsp]][['Real']]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_", env_data, "_covariate.std"))
covs=unique(betai[['exome']][[subsp]]$COVARIABLE_name)
### Add covariable names as row names (alphabetical order)
#names(habitat_col)=covs[order(covs)]
rownames(cov.in[[subsp]][['Real']])=covs[order(covs)]
### Add population names as column names (alphabetical order)
colnames(cov.in[[subsp]][['Real']])=pops[[subsp]]
}
}
env.pop
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/PanAf/phase1and2_exomes/baypass/')
myriad.output="../../../../../myriad/phase1and2_exome_output/"
subsps=c('all', 'ce', 'n', 'w')
env_data='forest_tree_pct'
omega_run=''
fprs=c(0.005, 0.001, 0.0005)
library(data.table)
options(datatable.fread.datatable=FALSE)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(plyr)
library(ape)
library(dendextend)
library(gplots)
library(cluster)
library(fpc)
library(viridis)
library(rgdal)
library(readxl)
# Call scripts containing custom functions
source("scripts/baypass_tools.R")
source("baypass_core/baypass_core_inference/scripts/plotting_tools/candidate_allele_frequency_patterns.R")
source("baypass_core/scripts/baypass_core_tools.R")
source("baypass_aux/scripts/baypass_aux_tools.R")
source("../allele.frequencies/scripts/allele_frequency_tools.R")
source("baypass_2.2/utils/baypass_utils.R")
subsp_name=list()
af=list()
pops=list()
omega=list()
ann=list()
xtx=list()
pi_para=list()
allele.freq=list()
subsp.col=list()
betai=list()
cov.in=list()
subsp_name=list(
'all'='All Subspecies',
'ce'='Central-Eastern',
'c'='Central',
'e'='Eastern',
'n'='Nigeria-Cameroon',
'w'='Western')
for(subsp in subsps){
if(subsp=='all'){subsp.file=''}else{subsp.file=paste0(".", subsp)}
if(subsp=='n'){miss.pop=0}else{miss.pop=0.3}
# Allele frequencies
for(miss_pop in c('0', '0.3')){
if(miss_pop=='0'){miss_pop2='0.0'}else{miss_pop2=miss_pop}
if(!(subsp=='n' & miss_pop=='0.3')){
af[['exome']][[subsp]][[miss_pop]]=fread(paste0("../../../../myriad/phase1and2_exome_output/allele.frequencies/mapped.on.target/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.",miss_pop,
"/f5", subsp.file,".pops.all.chrs_missing.pops.",miss_pop,"_pop.allele.counts_minMAC2"))
colnames(af[['exome']][[subsp]][[miss_pop]])=gsub("_chr.*\\.", ".", colnames(af[['exome']][[subsp]][[miss_pop]]))
af[['exome']][[subsp]][[miss_pop]]$chr=as.numeric(gsub("chr", "", af[['exome']][[subsp]][[miss_pop]]$chr))
af[['chr21']][[subsp]][[miss_pop]]=fread(paste0("../../../../myriad/phase1and2_chr21_output/allele.frequencies/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.",miss_pop,
"/chr21.f7", subsp.file, ".pops_chr21_missing.pops.",miss_pop2,"_pop.allele.counts_minMAC2.non-genic_1000bp.flanks"))
colnames(af[['chr21']][[subsp]][[miss_pop]])=gsub("_chr.*\\.", ".", colnames(af[['chr21']][[subsp]][[miss_pop]]))
af[['chr21']][[subsp]][[miss_pop]]$chr=as.numeric(gsub("chr", "", af[['chr21']][[subsp]][[miss_pop]]$chr))
}
}
pops[[subsp]]=colnames(af[['exome']][[subsp]][['0']])
pops[[subsp]]=pops[[subsp]][!(pops[[subsp]] %in% c('chr', 'pos'))]
pops[[subsp]]=unique(gsub("\\.aac$|\\.dac$", "", pops[[subsp]]))
pops[[subsp]]=gsub("_", ".", pops[[subsp]])
pops[[subsp]]=pops[[subsp]][order(pops[[subsp]])]
# Covariance matrices
for(seed in c('', '_seed.100', '_seed.10k')){
if(seed==''){seed_name='focal'}
if(seed=='_seed.100'){seed_name='100'}
if(seed=='_seed.10k'){seed_name='10k'}
omega[['exome']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.0_minMAC2",seed,"_mat_omega.out")))
colnames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
omega[['chr21']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.0_minMAC2.non-genic_1000bp.flanks",seed,"_mat_omega.out")))
colnames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
}
# XtX output
## Annotated file
ann[['exome']][[subsp]]=unique(fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5",
subsp.file, ".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.out_row.per.gtf.annot_5000bp.flanks"),
header = T, select=c("chr", "pos", "gene", "MRK")))
ann[['exome']][[subsp]][ann[['exome']][[subsp]]$gene=='.','gene']=NA
## Exome with FPR data
xtx[['exome']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/baypass_core_output_with_fprs/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.fpr.non-genic_1000bp.flanks"))
xtx[['exome']][[subsp]]=merge(xtx[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
## Chr21
xtx[['chr21']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks_summary_pi_xtx_formatted"))
## Pi prior parameters
seed_suffixs=c("", "_seed.100", "_seed.10k")
for(run in 1:3){
pi_para[['exome']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2", seed_suffixs[run], "_summary_beta_params.out"))
pi_para[['chr21']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks", seed_suffixs[run], "_summary_beta_params.out"))
}
## Allele frequencies
allele.freq[[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5", subsp.file,
".pops_missing.pops.", miss.pop,"_minMAC2_summary_pij.out_pop.info"))
#### Population colours (according to subspecies)
subsp.col[[subsp]]=c()
for(pop in pops[[subsp]]){
if(startsWith(pop, "c.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "green3")}
if(startsWith(pop, "e.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "darkorange")}
if(startsWith(pop, "n.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "red")}
if(startsWith(pop, "w.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "blue")}
}
# AUX output
if(subsp!='n'){
## Exome with FPR data
betai[['exome']][[subsp]]=unique(fread(paste0("baypass_aux/output/baypass_aux_output_with_fprs/f5", subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_",
env_data, "_summary_betai.out_all_runs.fpr.non-genic_1000bp.flanks")))
betai[['exome']][[subsp]]=merge(betai[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
betai[['exome']][[subsp]]$log_fpr=-log(betai[['exome']][[subsp]]$fpr)
## chr21
betai[['chr21']][[subsp]]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/chr21.f7",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2.non-genic_1000bp.flanks",omega_run,"_", env_data, "_summary_betai.out_all_runs.gz"))
## Cov file
cov.in[[subsp]][['Real']]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_", env_data, "_covariate.std"))
covs=unique(betai[['exome']][[subsp]]$COVARIABLE_name)
### Add covariable names as row names (alphabetical order)
#names(habitat_col)=covs[order(covs)]
rownames(cov.in[[subsp]][['Real']])=covs[order(covs)]
### Add population names as column names (alphabetical order)
colnames(cov.in[[subsp]][['Real']])=pops[[subsp]]
}
}
env.pop=read.csv("../../environmental_data/output/meta_data.env.pops.imputed.csv")
env.pop
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover))+
geom_point()
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover))+
geom_point() +
geom_smooth()
env.pop
env.pop=read.csv("../../environmental_data/output/meta_data.env.pops.imputed.csv")
env.pop
env.pop=read.csv("../../environmental_data/output/meta_data.env.pops.imputed.csv")
env.pop$Subspecies=NA
env.pop[grepl("^c\\.", env.pop$Population), "Subspecies"]="Central"
env.pop[grepl("^e\\.", env.pop$Population), "Subspecies"]="Eastern"
env.pop[grepl("^n\\.", env.pop$Population), "Subspecies"]="Nigeria-Cameroon"
env.pop[grepl("^w\\.", env.pop$Population), "Subspecies"]="Western"
source("baypass_aux/scripts/baypass_aux_tools.R")
betai.tmp=list()
af.tmp=list()
for(subsp in subsps[subsps!='n']){
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth()
}
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth()
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, fill=Subspecies))+
geom_point() +
geom_smooth()
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth()
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth() +
scale_fill_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth() +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth(method="lm") +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
geom_smooth
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
ggplot(env.pop, aes(x=forest_tree_pct, y=pct_tree_cover, col=Subspecies))+
theme_bw()+
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
ggplot(env.pop, aes(x=forest_tree_pct, y=mean_Hansen, col=Subspecies))+
theme_bw()+
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
run_env_vs_AF.v4
env_vs_AF.v4
cor.test(env.pop$forest_tree_pct, env.pop$mean_Hansen, method='pearson')
ggplot(env.pop, aes(x=forest_tree_pct, y=mean_Hansen, col=Subspecies))+
theme_bw()+
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
cor.test(env.pop$forest_tree_pct, env.pop$mean_Hansen, method='pearson')
ggplot(env.pop, aes(x=forest_tree_pct, y=mean_Hansen, col=Subspecies))+
theme_bw()+
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
cor.test(env.pop$forest_tree_pct, env.pop$mean_Hansen, method='pearson')
env.pop[, ("Population", "forest_tree_pct")]
env.pop[, c("Population", "forest_tree_pct")]
ggplot(env.pop, aes(x=forest_tree_pct, y=mean_Hansen, col=Subspecies, label=Population))+
theme_bw()+
geom_point() +
geom_text() +
geom_smooth(method="lm", se=FALSE) +
scale_colour_manual(values = c("Central"='green3', "Eastern"='darkorange', "Nigeria-Cameroon"='red', "Western"='blue'))
source("baypass_aux/scripts/baypass_aux_tools.R")
betai.tmp=list()
af.tmp=list()
for(subsp in subsps[subsps!='n']){
cat(subsp, "\n")
betai.tmp[[subsp]]=betai[['exome']][[subsp]][betai[['exome']][[subsp]]$gene %in% genes, ]
print(betai.tmp[[subsp]][betai.tmp[[subsp]]$fpr<0.005, c('chr', 'pos', 'M_Beta.median', 'fpr', 'gene', 'COVARIABLE_name')])
#print(betai[['exome']][[subsp]][betai[['exome']][[subsp]]$chr==11 & betai[['exome']][[subsp]]$pos==5254366, c('chr', 'pos', 'M_Beta.median', 'fpr', 'gene')])
run_env_vs_AF.v4(betai.tmp[subsp], cov.in[subsp], allele.freq[subsp], stats=c("M_P", "M_Pstd"), fprs=c(1, 0.005))
}
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/PanAf/phase1and2_exomes/baypass/')
myriad.output="../../../../../myriad/phase1and2_exome_output/"
subsps=c('all', 'ce', 'n', 'w')
env_data='forest_tree_pct'
omega_run=''
fprs=c(0.005, 0.001, 0.0005)
library(data.table)
options(datatable.fread.datatable=FALSE)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(plyr)
library(ape)
library(dendextend)
library(gplots)
library(cluster)
library(fpc)
library(viridis)
library(rgdal)
library(readxl)
# Call scripts containing custom functions
source("scripts/baypass_tools.R")
source("baypass_core/baypass_core_inference/scripts/plotting_tools/candidate_allele_frequency_patterns.R")
source("baypass_core/scripts/baypass_core_tools.R")
source("baypass_aux/scripts/baypass_aux_tools.R")
source("../allele.frequencies/scripts/allele_frequency_tools.R")
source("baypass_2.2/utils/baypass_utils.R")
subsp_name=list()
af=list()
pops=list()
omega=list()
ann=list()
xtx=list()
pi_para=list()
allele.freq=list()
subsp.col=list()
betai=list()
cov.in=list()
subsp_name=list(
'all'='All Subspecies',
'ce'='Central-Eastern',
'c'='Central',
'e'='Eastern',
'n'='Nigeria-Cameroon',
'w'='Western')
for(subsp in subsps){
if(subsp=='all'){subsp.file=''}else{subsp.file=paste0(".", subsp)}
if(subsp=='n'){miss.pop=0}else{miss.pop=0.3}
# Allele frequencies
for(miss_pop in c('0', '0.3')){
if(miss_pop=='0'){miss_pop2='0.0'}else{miss_pop2=miss_pop}
if(!(subsp=='n' & miss_pop=='0.3')){
af[['exome']][[subsp]][[miss_pop]]=fread(paste0("../../../../myriad/phase1and2_exome_output/allele.frequencies/mapped.on.target/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.",miss_pop,
"/f5", subsp.file,".pops.all.chrs_missing.pops.",miss_pop,"_pop.allele.counts_minMAC2"))
colnames(af[['exome']][[subsp]][[miss_pop]])=gsub("_chr.*\\.", ".", colnames(af[['exome']][[subsp]][[miss_pop]]))
af[['exome']][[subsp]][[miss_pop]]$chr=as.numeric(gsub("chr", "", af[['exome']][[subsp]][[miss_pop]]$chr))
af[['chr21']][[subsp]][[miss_pop]]=fread(paste0("../../../../myriad/phase1and2_chr21_output/allele.frequencies/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.",miss_pop,
"/chr21.f7", subsp.file, ".pops_chr21_missing.pops.",miss_pop2,"_pop.allele.counts_minMAC2.non-genic_1000bp.flanks"))
colnames(af[['chr21']][[subsp]][[miss_pop]])=gsub("_chr.*\\.", ".", colnames(af[['chr21']][[subsp]][[miss_pop]]))
af[['chr21']][[subsp]][[miss_pop]]$chr=as.numeric(gsub("chr", "", af[['chr21']][[subsp]][[miss_pop]]$chr))
}
}
pops[[subsp]]=colnames(af[['exome']][[subsp]][['0']])
pops[[subsp]]=pops[[subsp]][!(pops[[subsp]] %in% c('chr', 'pos'))]
pops[[subsp]]=unique(gsub("\\.aac$|\\.dac$", "", pops[[subsp]]))
pops[[subsp]]=gsub("_", ".", pops[[subsp]])
pops[[subsp]]=pops[[subsp]][order(pops[[subsp]])]
# Covariance matrices
for(seed in c('', '_seed.100', '_seed.10k')){
if(seed==''){seed_name='focal'}
if(seed=='_seed.100'){seed_name='100'}
if(seed=='_seed.10k'){seed_name='10k'}
omega[['exome']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.0_minMAC2",seed,"_mat_omega.out")))
colnames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['exome']][[subsp]][[seed_name]])=pops[[subsp]]
omega[['chr21']][[subsp]][[seed_name]]=as.matrix(fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.0_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.0_minMAC2.non-genic_1000bp.flanks",seed,"_mat_omega.out")))
colnames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
rownames(omega[['chr21']][[subsp]][[seed_name]])=pops[[subsp]]
}
# XtX output
## Annotated file
ann[['exome']][[subsp]]=unique(fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5",
subsp.file, ".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.out_row.per.gtf.annot_5000bp.flanks"),
header = T, select=c("chr", "pos", "gene", "MRK")))
ann[['exome']][[subsp]][ann[['exome']][[subsp]]$gene=='.','gene']=NA
## Exome with FPR data
xtx[['exome']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/baypass_core_output_with_fprs/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_summary_pi_xtx.fpr.non-genic_1000bp.flanks"))
xtx[['exome']][[subsp]]=merge(xtx[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
## Chr21
xtx[['chr21']][[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks_summary_pi_xtx_formatted"))
## Pi prior parameters
seed_suffixs=c("", "_seed.100", "_seed.10k")
for(run in 1:3){
pi_para[['exome']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_exome_output/baypass_output/mapped.on.target/ac/f5",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2/core/f5",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2", seed_suffixs[run], "_summary_beta_params.out"))
pi_para[['chr21']][[subsp]][[run]]=fread(paste0("../../../../myriad/phase1and2_chr21_output/baypass_output/ac/chr21.f7",
subsp.file, ".pops_minInd.6or50pct_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks/core/chr21.f7",
subsp.file, ".pops_missing.pops.", miss.pop, "_minMAC2.non-genic_1000bp.flanks", seed_suffixs[run], "_summary_beta_params.out"))
}
## Allele frequencies
allele.freq[[subsp]]=fread(paste0("baypass_core/baypass_core_inference/output/formatted_baypass_core_output/f5", subsp.file,
".pops_missing.pops.", miss.pop,"_minMAC2_summary_pij.out_pop.info"))
#### Population colours (according to subspecies)
subsp.col[[subsp]]=c()
for(pop in pops[[subsp]]){
if(startsWith(pop, "c.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "green3")}
if(startsWith(pop, "e.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "darkorange")}
if(startsWith(pop, "n.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "red")}
if(startsWith(pop, "w.")){subsp.col[[subsp]]=c(subsp.col[[subsp]], "blue")}
}
# AUX output
if(subsp!='n'){
## Exome with FPR data
betai[['exome']][[subsp]]=unique(fread(paste0("baypass_aux/output/baypass_aux_output_with_fprs/f5", subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_",
env_data, "_summary_betai.out_all_runs.fpr.non-genic_1000bp.flanks")))
betai[['exome']][[subsp]]=merge(betai[['exome']][[subsp]], ann[['exome']][[subsp]], by=c('chr', 'pos'), all.x=TRUE)
betai[['exome']][[subsp]]$log_fpr=-log(betai[['exome']][[subsp]]$fpr)
## chr21
betai[['chr21']][[subsp]]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/chr21.f7",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2.non-genic_1000bp.flanks",omega_run,"_", env_data, "_summary_betai.out_all_runs.gz"))
## Cov file
cov.in[[subsp]][['Real']]=fread(paste0("baypass_aux/output/formatted_baypass_aux_output/f5",
subsp.file ,".pops_missing.pops.", miss.pop,"_minMAC2_", env_data, "_covariate.std"))
covs=unique(betai[['exome']][[subsp]]$COVARIABLE_name)
### Add covariable names as row names (alphabetical order)
#names(habitat_col)=covs[order(covs)]
rownames(cov.in[[subsp]][['Real']])=covs[order(covs)]
### Add population names as column names (alphabetical order)
colnames(cov.in[[subsp]][['Real']])=pops[[subsp]]
}
}
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/PanAf/phase1and2_exomes/gowinda/baypass_aux/')
myriad.output="/Users/harrisonostridge/OneDrive - University College London/myriad/phase1and2_exome_output/"
subsps=c('all', 'ce', 'w')
env_data="forest_tree_pct"
covs=c('forest_tree_pct')
tails=c("fpr0.5pct.non-genic_1000bp.flanks", "fpr0.1pct.non-genic_1000bp.flanks", "fpr0.05pct.non-genic_1000bp.flanks", "top100snps.non-genic_1000bp.flanks")
tails_suffixs=c(".pos_beta", ".neg_beta")
plot_gowinda_all(subsps=subsps,
env_data=env_data,
covs=covs,
tails=tails,
gene.set='expr.5overlap')
plot_gowinda_all=function(subsps, env_data, covs, tails, gene.set){
for(subsp in subsps){
cat("-", subsp, "\n")
for(cov in covs){
for(tail_suffix in tails_suffixs){
cat("--", tail_suffix, "\n")
for(tail in paste0(tails, tail_suffix)){
gowinda_output_file=paste0("output/gowinda_output/",env_data,"/",subsp,".",env_data,"-",cov,".",tail,".gowinda_out.", gene.set)
if(file.exists(gowinda_output_file) & file.size(gowinda_output_file) > 0){
df=fread(gowinda_output_file)
if(nrow(df>0)){plot_gowinda(df, title=paste0(subsp,": ",env_data, ": ", cov, "\n", tail, " candidates"))}
}
}
}
}
}
}
plot_gowinda_all(subsps=subsps,
env_data=env_data,
covs=covs,
tails=tails,
gene.set='expr.5overlap')
source("../baypass_core/scripts/plot_gowinda.R")
plot_gowinda_all=function(subsps, env_data, covs, tails, gene.set){
for(subsp in subsps){
cat("-", subsp, "\n")
for(cov in covs){
for(tail_suffix in tails_suffixs){
cat("--", tail_suffix, "\n")
for(tail in paste0(tails, tail_suffix)){
gowinda_output_file=paste0("output/gowinda_output/",env_data,"/",subsp,".",env_data,"-",cov,".",tail,".gowinda_out.", gene.set)
if(file.exists(gowinda_output_file) & file.size(gowinda_output_file) > 0){
df=fread(gowinda_output_file)
if(nrow(df>0)){plot_gowinda(df, title=paste0(subsp,": ",env_data, ": ", cov, "\n", tail, " candidates"))}
}
}
}
}
}
}
plot_gowinda_all(subsps=subsps,
env_data=env_data,
covs=covs,
tails=tails,
gene.set='expr')
plot_gowinda_all(subsps=subsps,
env_data=env_data,
covs=covs,
tails=tails,
gene.set='expr.5overlap')
