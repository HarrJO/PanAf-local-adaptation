colnames(freq.per.pop)=c("Population", "Freq")
freq.per.pop
# In population structure directory
write.csv(freq.per.pop, "output/freq.per.pop.csv",
row.names=FALSE, quote=FALSE)
write.table(f5_exome, "output/f5.metadata.with.populations.csv", sep=",", row.names=FALSE, col.names=TRUE, quote=FALSE)
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/PanAf/phase1and2_chr21/sample_filtering/')
myriad.output="/Users/harrisonostridge/OneDrive - University College London/myriad/phase1and2_exome_output/"
min.cov=0.5
library(dplyr)
library(data.table)
library(ggplot2)
library(readxl)
# Exomes
f5_exome=read.csv("../../phase1and2_exomes/population_structure/output/f5.metadata.with.populations.csv")
## Order by sample
f5_exome=f5_exome[order(f5_exome$Sample),]
# chr21 (for comparison), sent by Claudia on 04/11/2021
chr21=read_excel("meta.data/TableS1_forAida.xlsx")
chr21=chr21[order(chr21$Sample),]
f5_chr21=chr21[chr21$Sample %in% f5_exome$Sample,]
hc.threshold=1
ggplot(f5_chr21) +
theme_minimal()+
geom_density(aes(x=`Human Contamination from Chr21`), col='black', fill='black',  alpha=0.3, adjust=0.5) +
labs(title="Human Contamination Density", x ="% Human Contamination", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = hc.threshold, linetype="dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5))
f5_chr21[f5_chr21$`Human Contamination from Chr21`>hc.threshold,c("Sample", "Coverage", "Human Contamination from Chr21")]
min.cov=0.5
ggplot(f5_chr21) +
theme_minimal()+
geom_density(aes(x=Coverage), col='black', fill='black',  alpha=0.3, adjust=0.5) +
labs(title="Mean Coverage Density, PC1 outliers and Human Contamination >1% Removed", x ="Mean Coverage Per On-Target Site", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = min.cov, linetype="dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5))
f5_chr21[f5_chr21$Coverage<min.cov,c("Sample", "Coverage", "Human Contamination from Chr21")]
f5_exome$BAM=paste0('/home/ucfajos/Scratch/data/phase1and2_chr21/BAM/', f5_exome$Sample, '.addRG.bam')
f5_exome
# Ensure it is ordered according to sample name
f5_exome=f5_exome[order(f5_exome$Sample),]
# All
write.table(f5_exome$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.all"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Central
write.table(f5_exome[f5_exome$Subspecies=="Central",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.c"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Eastern
write.table(f5_exome[f5_exome$Subspecies=="Eastern",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.e"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Nigeria-Cameroon
write.table(f5_exome[f5_exome$Subspecies=="Nigeria-Cameroon",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.n"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Western
write.table(f5_exome[f5_exome$Subspecies=="Western",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.w"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
pops=unique(f5_exome$Population)
for(pop in pops){
f5_exome.pop=f5_exome[f5_exome$Population==pop, ]
write.table(f5_exome.pop$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.", pop),
row.names=FALSE, col.names=FALSE, quote=FALSE)
}
f5_exome$Population
pops=unique(f5_exome$Population)
for(pop in pops){
f5_exome.pop=f5_exome[f5_exome$Population==pop, ]
write.table(f5_exome.pop$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.", pop),
row.names=FALSE, col.names=FALSE, quote=FALSE)
}
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/PanAf/phase1and2_chr21/sample_filtering/')
myriad.output="/Users/harrisonostridge/OneDrive - University College London/myriad/phase1and2_exome_output/"
min.cov=0.5
library(dplyr)
library(data.table)
library(ggplot2)
library(readxl)
# Exomes
f5_exome=read.csv("../../phase1and2_exomes/population_structure/output/f5.metadata.with.populations.csv")
## Order by sample
f5_exome=f5_exome[order(f5_exome$Sample),]
# chr21 (for comparison), sent by Claudia on 04/11/2021
chr21=read_excel("meta.data/TableS1_forAida.xlsx")
chr21=chr21[order(chr21$Sample),]
f5_chr21=chr21[chr21$Sample %in% f5_exome$Sample,]
hc.threshold=1
ggplot(f5_chr21) +
theme_minimal()+
geom_density(aes(x=`Human Contamination from Chr21`), col='black', fill='black',  alpha=0.3, adjust=0.5) +
labs(title="Human Contamination Density", x ="% Human Contamination", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = hc.threshold, linetype="dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5))
f5_chr21[f5_chr21$`Human Contamination from Chr21`>hc.threshold,c("Sample", "Coverage", "Human Contamination from Chr21")]
min.cov=0.5
ggplot(f5_chr21) +
theme_minimal()+
geom_density(aes(x=Coverage), col='black', fill='black',  alpha=0.3, adjust=0.5) +
labs(title="Mean Coverage Density, PC1 outliers and Human Contamination >1% Removed", x ="Mean Coverage Per On-Target Site", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = min.cov, linetype="dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5))
f5_chr21[f5_chr21$Coverage<min.cov,c("Sample", "Coverage", "Human Contamination from Chr21")]
f5_exome$BAM=paste0('/home/ucfajos/Scratch/data/phase1and2_chr21/BAM/', f5_exome$Sample, '.addRG.bam')
f5_exome
# Ensure it is ordered according to sample name
f5_exome=f5_exome[order(f5_exome$Sample),]
# All
write.table(f5_exome$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.all"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Central
write.table(f5_exome[f5_exome$Subspecies=="Central",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.c"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Eastern
write.table(f5_exome[f5_exome$Subspecies=="Eastern",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.e"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Nigeria-Cameroon
write.table(f5_exome[f5_exome$Subspecies=="Nigeria-Cameroon",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.n"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
# Western
write.table(f5_exome[f5_exome$Subspecies=="Western",]$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.w"),
row.names=FALSE, col.names=FALSE, quote=FALSE)
pops=unique(f5_exome$Population)
for(pop in pops){
f5_exome.pop=f5_exome[f5_exome$Population==pop, ]
write.table(f5_exome.pop$chr21.BAM,
paste0("output/bam.filelists/f5_based_on_exomes/bam.filelist.", pop),
row.names=FALSE, col.names=FALSE, quote=FALSE)
}
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
require(data.table)
require(dplyr)
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
colnames(five.percent.tail.midpoints.i) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.c <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.c.txt", header = F)
colnames(five.percent.tail.midpoints.c) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.e <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.e.txt", header = F)
colnames(five.percent.tail.midpoints.e) <- c("chromosome", "gene.mid.point")
# File for converting candidate gene midpoints to gene IDs
geneID.and.midpoint.i <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/threepclr.focal.snps.genes.minimum.p.i.txt", header = T)
geneID.and.midpoint.i$chromosome <- sub("chr", "", geneID.and.midpoint.i$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.c <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.c.txt", header = T)
geneID.and.midpoint.c$chromosome <- sub("chr", "", geneID.and.midpoint.c$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.e <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.e.txt", header = T)
geneID.and.midpoint.e$chromosome <- sub("chr", "", geneID.and.midpoint.e$chromosome) # Remove 'chr' prefix
# SIV midpoints
all.SIV.response.geneID <- fread("candidate_genes/output_data/make_background_lists_output/all.SIV.response.gene.ID.txt", header = F)
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="NFKB1",]
hist(geneID.and.midpoint.i$p.value)
five.percent.tail.genes.i <- merge(geneID.and.midpoint.i, five.percent.tail.midpoints.i, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.c <- merge(geneID.and.midpoint.c, five.percent.tail.midpoints.c, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.e <- merge(geneID.and.midpoint.e, five.percent.tail.midpoints.e, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.n <- merge(geneID.and.midpoint.n, five.percent.tail.midpoints.n, by=c("chromosome", "gene.mid.point"))[,5]
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
colnames(five.percent.tail.midpoints.i) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.c <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.c.txt", header = F)
colnames(five.percent.tail.midpoints.c) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.e <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.e.txt", header = F)
colnames(five.percent.tail.midpoints.e) <- c("chromosome", "gene.mid.point")
# File for converting candidate gene midpoints to gene IDs
geneID.and.midpoint.i <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/threepclr.focal.snps.genes.minimum.p.i.txt", header = T)
geneID.and.midpoint.i$chromosome <- sub("chr", "", geneID.and.midpoint.i$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.c <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.c.txt", header = T)
geneID.and.midpoint.c$chromosome <- sub("chr", "", geneID.and.midpoint.c$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.e <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.e.txt", header = T)
geneID.and.midpoint.e$chromosome <- sub("chr", "", geneID.and.midpoint.e$chromosome) # Remove 'chr' prefix
# SIV midpoints
all.SIV.response.geneID <- fread("candidate_genes/output_data/make_background_lists_output/all.SIV.response.gene.ID.txt", header = F)
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="NFKB1",]
hist(geneID.and.midpoint.i$p.value)
five.percent.tail.genes.i <- merge(geneID.and.midpoint.i, five.percent.tail.midpoints.i, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.c <- merge(geneID.and.midpoint.c, five.percent.tail.midpoints.c, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.e <- merge(geneID.and.midpoint.e, five.percent.tail.midpoints.e, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.n <- merge(geneID.and.midpoint.n, five.percent.tail.midpoints.n, by=c("chromosome", "gene.mid.point"))[,5]
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
colnames(five.percent.tail.midpoints.i) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.c <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.c.txt", header = F)
colnames(five.percent.tail.midpoints.c) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.e <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.e.txt", header = F)
colnames(five.percent.tail.midpoints.e) <- c("chromosome", "gene.mid.point")
# File for converting candidate gene midpoints to gene IDs
geneID.and.midpoint.i <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/threepclr.focal.snps.genes.minimum.p.i.txt", header = T)
geneID.and.midpoint.i$chromosome <- sub("chr", "", geneID.and.midpoint.i$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.c <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.c.txt", header = T)
geneID.and.midpoint.c$chromosome <- sub("chr", "", geneID.and.midpoint.c$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.e <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.e.txt", header = T)
geneID.and.midpoint.e$chromosome <- sub("chr", "", geneID.and.midpoint.e$chromosome) # Remove 'chr' prefix
# SIV midpoints
all.SIV.response.geneID <- fread("candidate_genes/output_data/make_background_lists_output/all.SIV.response.gene.ID.txt", header = F)
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="NFKB1",]
hist(geneID.and.midpoint.i$p.value)
five.percent.tail.genes.i <- merge(geneID.and.midpoint.i, five.percent.tail.midpoints.i, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.c <- merge(geneID.and.midpoint.c, five.percent.tail.midpoints.c, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.e <- merge(geneID.and.midpoint.e, five.percent.tail.midpoints.e, by=c("chromosome", "gene.mid.point"))[,5]
all.candidate.genes <- unique(rbind(five.percent.tail.genes.i, five.percent.tail.genes.c, five.percent.tail.genes.e))
# Only internal
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "brown"
# Only central
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "green"
# Only eastern
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "orange"
# Overlap: internal and central
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "blue"
# Overlap: internal and eastern
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "purple"
# Overlap: central and eastern
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "yellow"
# Overlap: all
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "black"
all.candidate.genes[all.candidate.genes$gene.ID=="STAT1"]
write.table(all.candidate.genes, "candidate_genes/output_data/visualise_candidate_genes_output/all.tail.genes.overlap.colours.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(all.candidate.genes[all.candidate.genes$colour=="brown"], "candidate_genes/output_data/visualise_candidate_genes_output/all.tail.genes.overlap.all.branches.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
SIV.candidate.genes <- all.candidate.genes[all.candidate.genes$gene.ID %in% all.SIV.response.geneID$V1]
write.table(SIV.candidate.genes, "candidate_genes/output_data/visualise_candidate_genes_output/SIV.tail.genes.overlap.colours.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
all.candidate.genes[all.candidate.genes$colour=="brown"]
SIV.candidate.genes[SIV.candidate.genes$colour=="brown"]
five.percent.tail.midpoints.w[five.percent.tail.midpoints.w$gene.mid.point=="150979592"]
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
colnames(five.percent.tail.midpoints.i) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.c <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.c.txt", header = F)
colnames(five.percent.tail.midpoints.c) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.e <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.e.txt", header = F)
colnames(five.percent.tail.midpoints.e) <- c("chromosome", "gene.mid.point")
# File for converting candidate gene midpoints to gene IDs
geneID.and.midpoint.i <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/threepclr.focal.snps.genes.minimum.p.i.txt", header = T)
geneID.and.midpoint.i$chromosome <- sub("chr", "", geneID.and.midpoint.i$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.c <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.c.txt", header = T)
geneID.and.midpoint.c$chromosome <- sub("chr", "", geneID.and.midpoint.c$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.e <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.e.txt", header = T)
geneID.and.midpoint.e$chromosome <- sub("chr", "", geneID.and.midpoint.e$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.n <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.n.txt", header = T)
geneID.and.midpoint.n$chromosome <- sub("chr", "", geneID.and.midpoint.n$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.w <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.w.txt", header = T)
geneID.and.midpoint.w$chromosome <- sub("chr", "", geneID.and.midpoint.w$chromosome) # Remove 'chr' prefix
# SIV midpoints
all.SIV.response.geneID <- fread("candidate_genes/output_data/make_background_lists_output/all.SIV.response.gene.ID.txt", header = F)
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="NFKB1",]
hist(geneID.and.midpoint.i$p.value)
five.percent.tail.genes.i <- merge(geneID.and.midpoint.i, five.percent.tail.midpoints.i, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.c <- merge(geneID.and.midpoint.c, five.percent.tail.midpoints.c, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.e <- merge(geneID.and.midpoint.e, five.percent.tail.midpoints.e, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.n <- merge(geneID.and.midpoint.n, five.percent.tail.midpoints.n, by=c("chromosome", "gene.mid.point"))[,5]
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
rm(list=ls())
knitr::opts_knit$set(root.dir = '~/OneDrive - University College London/Projects/Internal_branch_enrichment/')
# need to set working directory like this so it carries over the chunks
library(data.table)
library(dplyr)
# Length corrected candidate gene midpoints
## NB this is not actually pbsnj like the file name says but 3P-CLR candidates. They were sent by Josh
five.percent.tail.midpoints.i <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.internal.txt", header = F)
colnames(five.percent.tail.midpoints.i) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.c <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.c.txt", header = F)
colnames(five.percent.tail.midpoints.c) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.e <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.e.txt", header = F)
colnames(five.percent.tail.midpoints.e) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.n <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.n.txt", header = F)
colnames(five.percent.tail.midpoints.n) <- c("chromosome", "gene.mid.point")
five.percent.tail.midpoints.w <- fread("input_data/length_corrected_candidates_harvi2021/pbsnj_5percent.min.p.tail.midpoint.length.corrected.w.txt", header = F)
colnames(five.percent.tail.midpoints.w) <- c("chromosome", "gene.mid.point")
# File for converting candidate gene midpoints to gene IDs
geneID.and.midpoint.i <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/threepclr.focal.snps.genes.minimum.p.i.txt", header = T)
geneID.and.midpoint.i$chromosome <- sub("chr", "", geneID.and.midpoint.i$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.c <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.c.txt", header = T)
geneID.and.midpoint.c$chromosome <- sub("chr", "", geneID.and.midpoint.c$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.e <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.e.txt", header = T)
geneID.and.midpoint.e$chromosome <- sub("chr", "", geneID.and.midpoint.e$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.n <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.n.txt", header = T)
geneID.and.midpoint.n$chromosome <- sub("chr", "", geneID.and.midpoint.n$chromosome) # Remove 'chr' prefix
geneID.and.midpoint.w <- fread("candidate_genes/output_data/assign_p_values_to_genes_output/pbsnj.snps.genes.minimum.p.w.txt", header = T)
geneID.and.midpoint.w$chromosome <- sub("chr", "", geneID.and.midpoint.w$chromosome) # Remove 'chr' prefix
# SIV midpoints
all.SIV.response.geneID <- fread("candidate_genes/output_data/make_background_lists_output/all.SIV.response.gene.ID.txt", header = F)
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="NFKB1",]
hist(geneID.and.midpoint.i$p.value)
five.percent.tail.genes.i <- merge(geneID.and.midpoint.i, five.percent.tail.midpoints.i, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.c <- merge(geneID.and.midpoint.c, five.percent.tail.midpoints.c, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.e <- merge(geneID.and.midpoint.e, five.percent.tail.midpoints.e, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.n <- merge(geneID.and.midpoint.n, five.percent.tail.midpoints.n, by=c("chromosome", "gene.mid.point"))[,5]
five.percent.tail.genes.w <- merge(geneID.and.midpoint.w, five.percent.tail.midpoints.w, by=c("chromosome", "gene.mid.point"))[,5]
all.candidate.genes <- unique(rbind(five.percent.tail.genes.i, five.percent.tail.genes.c, five.percent.tail.genes.e))
# Only internal
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "brown"
# Only central
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "green"
# Only eastern
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "orange"
# Overlap: internal and central
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "blue"
# Overlap: internal and eastern
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
!all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "purple"
# Overlap: central and eastern
all.candidate.genes$colour[!all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "yellow"
# Overlap: all
all.candidate.genes$colour[all.candidate.genes$gene.ID %in% five.percent.tail.genes.i$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.c$gene.ID &
all.candidate.genes$gene.ID %in% five.percent.tail.genes.e$gene.ID
== TRUE] <- "black"
all.candidate.genes[all.candidate.genes$gene.ID=="STAT1"]
write.table(all.candidate.genes, "candidate_genes/output_data/visualise_candidate_genes_output/all.tail.genes.overlap.colours.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(all.candidate.genes[all.candidate.genes$colour=="brown"], "candidate_genes/output_data/visualise_candidate_genes_output/all.tail.genes.overlap.all.branches.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
SIV.candidate.genes <- all.candidate.genes[all.candidate.genes$gene.ID %in% all.SIV.response.geneID$V1]
write.table(SIV.candidate.genes, "candidate_genes/output_data/visualise_candidate_genes_output/SIV.tail.genes.overlap.colours.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
all.candidate.genes[all.candidate.genes$colour=="brown"]
SIV.candidate.genes[SIV.candidate.genes$colour=="brown"]
five.percent.tail.midpoints.w[five.percent.tail.midpoints.w$gene.mid.point=="150979592"]
geneID.and.midpoint.n[geneID.and.midpoint.n$gene.ID=="TAB2"]
geneID.and.midpoint.i[geneID.and.midpoint.i$gene.ID=="TAB2"]
geneID.and.midpoint.c[geneID.and.midpoint.c$gene.ID=="TAB2"]
geneID.and.midpoint.e[geneID.and.midpoint.e$gene.ID=="TAB2"]
#bed=fread("candidate_genes/output_data/intersect_3PCLR_and_PBSnj_SNPs_with_genes_output/chimp.genes.2kb.flanks.bed")
#colnames(bed)=c("chr", "start", "stop", "gene.ID")
#bed$midpoint=round(((bed$start+2000) + (bed$stop-2000))/2)
#bed=bed[,c("gene.ID", "midpoint")]
magenta=c("epb41", "fmnl3", "atp13a2", "blcap", "glb1", "seh1l", "rab35", "pacs2", "wbp11", "znf609", "ehmt1", "dctd", "dpp9", "ager", "cacnb3", "rassf7", "rabgap1l", "usp20", "shmt1", "hook3", "shprh", "purb", "mesp1", "myh9", "cd6")
siv_response=c("fam227b", "shcbp1", "pid1", "mtmr11", "rabggtb", "ptpre", "lrg1", "dffb", "coro2b", "glis3", "knstrn", "slfn14", "slc24a3", "arf5", "npc1l1", "lag3", "tmem63a", "foxred1", "coro1b", "mrps2", "b4galt2", "ndrg3", "tmem207", "yipf5", "ctif", "terb2", "b4galt7", "tp53i13", "cdipt", "dnajc19", "zdhhc16", "prpsap2", "ahnak2", "ckap2", "fmnl3", "sipa1l2", "aamp", "lrp1", "tmem260", "aar2", "fam173a", "gcc1", "phf14", "wdr76", "pgam5", "nyap1", "glrx5", "pgam1", "prh2", "dcaf8", "rgp1", "isoc2", "tspoap1", "znf212", "anxa4", "inhba", "c2orf74", "hbd", "wars", "agbl2", "atp13a2", "blcap", "znf665", "batf3", "rab10", "stard10", "rnft1", "irf2", "irf4", "eif5b", "hspa13", "bmp4", "sbno1", "socs2", "gcn1", "clk2", "glb1", "vps45", "lamtor1", "dao", "sohlh1", "synpo2l", "vps35", "rtp3", "nicn1", "klhdc3", "seh1l", "rab35", "or51b2", "chrna7", "vps54", "neurod6", "olfml2a", "gpn2", "lysmd4", "tnfsf13b", "ier5", "polr3f", "ska1", "hvcn1", "mei1", "lcmt2", "stac3", "abi2", "aurkb", "rps6kb2", "ltbp1", "fhod1", "gpx1", "mroh2b", "mal", "baiap2", "arhgef10", "wbp11", "cdk4", "rbm12", "fam168b", "ripk1", "scn2a", "chuk", "mcu", "znf609", "nfe2l3", "nr2f6", "creb5", "dst", "wnt10a", "npepl1", "ehmt1", "trim56", "abtb2", "znf513", "mms22l", "pafah1b2", "cdk12", "id3", "mef2c", "il21", "mybph", "pcmt1", "ccl24", "dctd", "c11orf84", "sec14l5", "scin", "stk11", "foxn1", "megf11", "ccnt1", "rexo1", "afap1l2", "dpp9", "ager", "zc3h12a", "srcap", "gpr171", "ina", "mllt10", "tbc1d7", "pptc7", "crhr1", "c22orf42", "lrrc42", "mrpl19", "tuba1b", "slc39a8", "p4ha2", "dda1", "rasgrp1", "mbd3", "tfap4", "cacna1i", "kcns2", "arfrp1", "apbb1", "urm1", "siglec11", "cish", "naaa", "pde2a", "crem", "akr1b15", "rassf7", "il4i1", "rabgap1l", "usp20", "hnrnpul1", "igf1", "sorbs2", "cdk2ap1", "h2afx", "shmt1", "nln", "prr13", "myt1l", "hook3", "galk2", "sdf2", "ube4a", "dhrs2", "c8a", "cops2", "nat9", "rchy1", "llph", "leng1", "rai1", "mapk13", "tchp", "hs3st2", "zc3h18", "lyl1", "ogfrl1", "traf3ip2", "rnf41", "lmntd2", "kansl2", "phc2", "dynll1", "tfb1m", "hdac5", "pstpip2", "icos", "rnasel", "tnfrsf11a", "pnpla3", "lima1", "clec4a", "ubxn1", "usp3", "abhd15", "usmg5", "tmed9", "kif1bp", "fgd6", "gpat2", "sema6a", "dapp1", "edar", "mcm4", "gpatch3", "col1a2", "epb41l1", "cbfb", "bnip1", "c4bpb", "aif1l", "arrdc2", "thbs3", "sept1", "spr", "bnipl", "noct", "knl1", "zcchc14", "ptprcap", "mcmbp", "inpp5f", "inpp5e", "aldh3a2", "tlr2", "ddit3", "nudt16l1", "znf740", "tmem186", "tspan13", "edaradd", "xpo1", "cd36", "or10x1", "purb", "mmp19", "timp2", "cyb5d1", "trafd1", "mmp10", "tmem17", "ncor2", "cenpl", "csta", "parp16", "tmem37", "sall2", "sit1", "tespa1", "dgat1", "myh9", "pcyox1l", "cbx7", "bahd1", "scarb1", "ca1", "tulp4", "blnk", "pcdhb13", "map3k11", "plekho1", "cd6")
hiv_vips=c("ezh2", "camlg", "xrcc6", "pcsk7", "cxcr6", "cox5a", "akap8l", "spata5l1", "lbr", "hspg2", "lrp1", "snw1", "preb", "ccr3", "pds5b", "dcaf1", "dcaf8", "isoc2", "gtf2h3", "wdr36", "pak2", "nipbl", "paxbp1", "eif5b", "hspa13", "lpo", "rtn4", "eif3g", "vps35", "seh1l", "med1", "ltf", "sgpl1", "pacs2", "ergic3", "glg1", "itpr1", "tarbp2", "nudc", "chp1", "kif22", "mdfic", "ccnb2", "rbm17", "thumpd1", "rbm12", "rpl35a", "atp6v1d", "atxn10", "hebp1", "slc30a7", "yeats4", "trim6", "pcmt1", "mars", "ift122", "hist1h2bd", "pip4k2a", "ccnt1", "gimap1", "gusb", "mettl7a", "cxxc1", "spag5", "ppm1g", "mx2", "atp2a2", "cstf3", "itgal", "tuba1a", "tuba1b", "p4ha2", "dda1", "mbd3", "nfatc2", "whsc1", "ngly1", "ndufb10", "slirp", "mepce", "fosl2", "calu", "sdc4", "sdf2", "rac1", "nars", "srsf6", "ddx6", "epn2", "stoml2", "kcnh3", "snu13", "apoa1", "spats2", "slc27a4", "clec4a", "spcs3", "igf2bp3", "scamp3", "tmed9", "hadha", "sp1", "cbfb", "anapc7", "serpinc1", "prpf6", "rad23a", "cd28", "tlr2", "ddit3", "sssca1", "tardbp", "sf3a3", "sf3a1", "ccdc134", "prkdc", "pura", "purb", "cd74", "sf3b3", "cd63", "dap3", "comt", "myh9", "exosc1", "mfap1", "ankrd13a", "rbm7", "tnpo3", "cers2", "bicd2", "nop58", "cd4")
magenta=toupper(magenta)
siv_response=toupper(siv_response)
hiv_vips=toupper(hiv_vips)
gene_sets=list("magenta"=magenta, "siv_response"=siv_response, "hiv_vips"=hiv_vips)
cand_branch=list()
for(gene_set in names(gene_sets)){
cand_branch[[gene_set]]=data.frame(matrix(0, nrow = length(gene_sets[[gene_set]]), ncol = 8))
colnames(cand_branch[[gene_set]])=c("gene", "c", "e", "i", "c_and_e", "c_and_i", "e_and_i", "all")
cand_branch[[gene_set]]$gene=gene_sets[[gene_set]]
for(gene in gene_sets[[gene_set]]){
in_c=(gene %in% five.percent.tail.genes.c$gene.ID)
in_e=(gene %in% five.percent.tail.genes.e$gene.ID)
in_i=(gene %in% five.percent.tail.genes.i$gene.ID)
if(in_c & !in_e & !in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"c"] = 1}
if(!in_c & in_e & !in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"e"] = 1}
if(!in_c & !in_e & in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"i"] = 1}
if(in_c & in_e & !in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"c_and_e"] = 1}
if(in_c & !in_e & in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"c_and_i"] = 1}
if(!in_c & in_e & in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"e_and_i"] = 1}
if(in_c & in_e & in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"all"] = 1}
}
}
cand_branch
cand_branch$magenta[rowSums(cand_branch$magenta[,2:ncol(cand_branch$magenta)])==0,]
cand_branch$siv_response[rowSums(cand_branch$siv_response[,2:ncol(cand_branch$siv_response)])==0,]
cand_branch$hiv_vips[rowSums(cand_branch$hiv_vips[,2:ncol(cand_branch$hiv_vips)])==0,]
gene_sets=list("magenta"=magenta, "siv_response"=siv_response, "hiv_vips"=hiv_vips)
cand_branch=list()
for(gene_set in names(gene_sets)){
cand_branch[[gene_set]]=data.frame(matrix(0, nrow = length(gene_sets[[gene_set]]), ncol = 4))
colnames(cand_branch[[gene_set]])=c("gene", "c", "e", "i")
cand_branch[[gene_set]]$gene=gene_sets[[gene_set]]
for(gene in gene_sets[[gene_set]]){
in_c=(gene %in% five.percent.tail.genes.c$gene.ID)
in_e=(gene %in% five.percent.tail.genes.e$gene.ID)
in_i=(gene %in% five.percent.tail.genes.i$gene.ID)
if(in_c){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"c"] = 1}
if(in_e){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"e"] = 1}
if(in_i){cand_branch[[gene_set]][cand_branch[[gene_set]]$gene==gene,"i"] = 1}
}
}
cand_branch
cand_branch$magenta[rowSums(cand_branch$magenta[,2:ncol(cand_branch$magenta)])==0,]
cand_branch$siv_response[rowSums(cand_branch$siv_response[,2:ncol(cand_branch$siv_response)])==0,]
cand_branch$hiv_vips[rowSums(cand_branch$hiv_vips[,2:ncol(cand_branch$hiv_vips)])==0,]
cand_branch$magenta[rowSums(cand_branch$magenta[,2:ncol(cand_branch$magenta)])==0,]
cand_branch$siv_response[rowSums(cand_branch$siv_response[,2:ncol(cand_branch$siv_response)])==0,]
cand_branch$hiv_vips[rowSums(cand_branch$hiv_vips[,2:ncol(cand_branch$hiv_vips)])==0,]
geneID.and.midpoint.i
geneID.and.midpoint.c
geneID.and.midpoint.i[,c('chromosome','gene.mid.point', 'gene.ID')]
geneID.and.midpoint=unique(rbind(geneID.and.midpoint.c[,c('chromosome','gene.mid.point', 'gene.ID')],
geneID.and.midpoint.e[,c('chromosome','gene.mid.point', 'gene.ID')],
geneID.and.midpoint.i[,c('chromosome','gene.mid.point', 'gene.ID')]))
geneID.and.midpoint
geneID.and.midpoint.i
geneID.and.midpoint.e
geneID.and.midpoint.c
geneID.and.midpoint.i
geneID.and.midpoint[geneID.and.midpoint$gene.ID=='EPB41']
29057987 %in% five.percent.tail.midpoints.c
29057987 %in% five.percent.tail.midpoints.e
29057987 %in% five.percent.tail.midpoints.i
five.percent.tail.midpoints.i
29057987 %in% five.percent.tail.midpoints.i$gene.mid.point
29057987 %in% five.percent.tail.midpoints.e$gene.mid.point
29057987 %in% five.percent.tail.midpoints.c$gene.mid.point
five.percent.tail.midpoints.c$gene.mid.point
29057987 %in% order(five.percent.tail.midpoints.c$gene.mid.point)
order(five.percent.tail.midpoints.c$gene.mid.point)
rank(five.percent.tail.midpoints.c$gene.mid.point)
five.percent.tail.genes.i
five.percent.tail.midpoints.c
fread("input_data/length_corrected_candidates_harvi2021/internal.central.eastern.min.p.tail.midpoint.length.corrected.uniq.txt")
geneID.and.midpoint.all=fread("input_data/length_corrected_candidates_harvi2021/internal.central.eastern.min.p.tail.midpoint.length.corrected.uniq.txt")
29057987 %in% geneID.and.midpoint.all$gene.mid.point
29057987 %in% geneID.and.midpoint.all$gene.mid.point
geneID.and.midpoint.all$gene.mid.point
geneID.and.midpoint.all
29057987 %in% geneID.and.midpoint.all$V2
geneID.and.midpoint.all$V2
29057986 %in% geneID.and.midpoint.all$V2
29057988 %in% geneID.and.midpoint.all$V2
29057987 %in% geneID.and.midpoint.all$V2
geneID.and.midpoint.all
geneID.and.midpoint[geneID.and.midpoint$gene.ID=='EPB41']
geneID.and.midpoint.all[geneID.and.midpoint.all$V1==1,]
29177800 %in% geneID.and.midpoint
29177800 %in% geneID.and.midpoint$gene.ID
geneID.and.midpoint$gene.ID
29177800 %in% geneID.and.midpoint$gene.mid.point
